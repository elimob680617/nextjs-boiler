@import "tailwindcss";

@import '../tailwind/components.css' layer(components);

@custom-variant dark (&:where(.dark, .dark *));

:root {
  /* Base Colors */
  --current: currentColor;
  --clb-c-transparent: transparent;
  --clb-c-white: oklch(0.98 0 0 / 1);
  --clb-c-primary: oklch(0.59 0.19 254.77 / 1);
  --clb-c-secondary: oklch(0.57 0.20 283.08 / 1);
  --clb-c-accent: oklch(0.69 0.12 185.39 / 1);
  --clb-c-neutral: oklch(0.31 0.02 254.14 / 1);
  --clb-c-info: oklch(0.76 0.14 231.62 / 1);
  --clb-c-success: oklch(0.77 0.15 163.10 / 1);
  --clb-c-warning: oklch(0.83 0.16 83.42 / 1);
  --clb-c-error: oklch(0.71 0.16 22.15 / 1);
  --clb-c-gradient-first: oklch(0.83 0.18 160.17 / 1);
  --clb-c-gradient-second: oklch(0.68 0.15 238.98 / 1);

  --clb-c-base-25: oklch(0.36 0.02 254.10 / 1);
  --clb-c-base-50: oklch(0.31 0.02 254.14 / 1);
  --clb-c-base-75: oklch(0.27 0.02 248.44 / 1);
  --clb-c-base-100: oklch(0.25 0.02 252.42 / 1);
  --clb-c-base-200: oklch(0.23 0.01 253.10 / 1);
  --clb-c-base-300: oklch(0.21 0.01 254.09 / 1);

  --clb-c-base-content: oklch(0.75 0.02 264.44 / 1);


  --clb-c-primary-focus: color-mix(in oklch, var(--clb-c-primary), black 20%);
  --clb-c-primary-content: color-mix(in oklch, var(--clb-c-primary), white 80%);
  --clb-c-secondary-focus: color-mix(in oklch, var(--clb-c-secondary), black 20%);
  --clb-c-secondary-content: color-mix(in oklch, var(--clb-c-secondary), white 80%);

  --clb-c-info-content: color-mix(in oklch, var(--clb-c-info), white 80%);
  --clb-c-info-focus: color-mix(in oklch, var(--clb-c-info), black 20%);
  --clb-c-success-content: color-mix(in oklch, var(--clb-c-success), white 80%);
  --clb-c-success-focus: color-mix(in oklch, var(--clb-c-success), black 20%);
  --clb-c-warning-content: color-mix(in oklch, var(--clb-c-warning), white 80%);
  --clb-c-warning-focus: color-mix(in oklch, var(--clb-c-warning), black 20%);
  --clb-c-error-content: color-mix(in oklch, var(--clb-c-error), white 80%);
  --clb-c-error-focus: color-mix(in oklch, var(--clb-c-error), black 20%);
}

/* Apply Colors to Tailwind */
@theme {
  --color-current: var(--current);
  --color-transparent: var(--clb-c-transparent);
  --color-white: var(--clb-c-white);
  --color-primary: var(--clb-c-primary);
  --color-primary-content: var(--clb-c-primary-content);
  --color-primary-focus: var(--clb-c-primary-focus);
  --color-secondary: var(--clb-c-secondary);
  --color-secondary-content: var(--clb-c-secondary-content);
  --color-secondary-focus: var(--clb-c-secondary-focus);
  --color-accent: var(--clb-c-accent);

  --color-neutral: var(--clb-c-neutral);


  --color-info: var(--clb-c-info);
  --color-info-content: var(--clb-c-info-content);
  --color-info-focus: var(--clb-c-info-focus);
  --color-success: var(--clb-c-success);
  --color-success-content: var(--clb-c-success-content);
  --color-success-focus: var(--clb-c-success-focus);
  --color-warning: var(--clb-c-warning);
  --color-warning-content: var(--clb-c-warning-content);
  --color-warning-focus: var(--clb-c-warning-focus);
  --color-error: var(--clb-c-error);
  --color-error-content: var(--clb-c-error-content);
  --color-error-focus: var(--clb-c-error-focus);

  --color-gradient-first: var(--clb-c-gradient-first);
  --color-gradient-second: var(--clb-c-gradient-second);


  --color-base-25: var(--clb-c-base-25);
  --color-base-50: var(--clb-c-base-50);
  --color-base-75: var(--clb-c-base-75);
  --color-base-100: var(--clb-c-base-100);
  --color-base-200: var(--clb-c-base-200);
  --color-base-300: var(--clb-c-base-300);
  --color-base-content: var(--clb-c-base-content);

}

@layer base {
  body {
    font-family: var(--font-yekan);
  }

  :lang(en) {
    font-family: var(--font-figtree);
  }

  input[type="number"]::-webkit-outer-spin-button,
  input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type="number"] {
    -moz-appearance: textfield;
  }


  @keyframes fadeIn {
    0% {
      opacity: 0;
      transform: translateX(20px);
    }

    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .fade-in {
    animation: fadeIn 0.8s ease forwards;
  }
}


@layer utilities {
  .container {
    margin-inline: auto;
    padding-inline: 1rem;
  }

  .bg-hero-pattern {
    /*background-image: url('/images/tile.svg');*/
  }

  .gradient {
    @apply bg-gradient-to-r from-gradient-first to-gradient-second text-transparent bg-clip-text;
  }

  .gradient-reverse {
    @apply bg-gradient-to-r from-gradient-second to-gradient-first text-transparent bg-clip-text;
  }
}